<mah:MetroWindow x:Class="TicketManager.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TicketManager.WPF"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        mc:Ignorable="d"
        Title="Ticket-TI" Height="540" Width="960">
    <mah:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="LightColors.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </mah:MetroWindow.Resources>
    <DockPanel Margin="10">
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,0,0,10">
            <Button x:Name="NewTicketButton" Content="Novo Ticket" Margin="0,0,5,0" Padding="10,5"/>
            <Button x:Name="ViewTicketButton" Content="Visualizar" Margin="0,0,5,0" Padding="10,5" IsEnabled="False"/>
            <Button x:Name="EditTicketButton" Content="Editar Ticket" Margin="0,0,5,0" Padding="10,5" IsEnabled="False"/>
            <Button x:Name="ReopenTicketButton" Content="Reabrir Ticket" Margin="0,0,5,0" Padding="10,5" IsEnabled="False"/>
            <Button x:Name="DeleteTicketButton" Content="Excluir Ticket" Padding="10,5"/>

            <Separator Margin="10,0"/>

            <Button x:Name="ExportButton" Content="Exportar para Excel" Padding="10,5"/>

            <Separator Margin="10,0"/>

            <Button x:Name="SettingsButton" Content="Configurações" Padding="10,5"/>
            <mah:DropDownButton Content="Estilo" Padding="10,5" Margin="5,0,0,0">
                <mah:DropDownButton.Items>
                    <MenuItem Header="Claro"/>
                    <MenuItem Header="Escuro"/>
                </mah:DropDownButton.Items>
            </mah:DropDownButton>
        </StackPanel>

        <StatusBar DockPanel.Dock="Bottom">
            <TextBlock x:Name="CurrentUserTextBlock"/>
        </StatusBar>

        <!-- Filter Bar -->
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,5,0,10">
            <Label Content="Filtros:" FontWeight="Bold" VerticalAlignment="Center"/>
            <Label Content="Status:" VerticalAlignment="Center" Margin="10,0,5,0"/>
            <ComboBox Name="StatusFilterComboBox" Width="120" VerticalAlignment="Center"/>
            <Label Content="Prioridade:" VerticalAlignment="Center" Margin="10,0,5,0"/>
            <ComboBox Name="PriorityFilterComboBox" Width="100" VerticalAlignment="Center"/>
            <Label Content="De:" VerticalAlignment="Center" Margin="10,0,5,0"/>
            <DatePicker Name="StartDatePicker" Width="120" VerticalAlignment="Center" PreviewKeyDown="DatePicker_PreviewKeyDown"/>
            <Label Content="Até:" VerticalAlignment="Center" Margin="10,0,5,0"/>
            <DatePicker Name="EndDatePicker" Width="120" VerticalAlignment="Center" PreviewKeyDown="DatePicker_PreviewKeyDown"/>
            <Button Name="FilterButton" Content="Filtrar" Margin="10,0,5,0" Padding="10,2" Click="FilterButton_Click"/>
            <Button Name="ClearFilterButton" Content="Limpar" Padding="10,2" Click="ClearFilterButton_Click"/>
        </StackPanel>

        <DataGrid Name="TicketsGrid" AutoGenerateColumns="False" IsReadOnly="True" SelectionChanged="TicketsGrid_SelectionChanged" MouseDoubleClick="TicketsGrid_MouseDoubleClick" GridLinesVisibility="None">
            <DataGrid.RowStyle>
    <Style TargetType="DataGridRow">
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Style.Triggers>
            <!-- Tickets Abertos -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Status}" Value="Aberto"/>
                    <Condition Binding="{Binding Priority}" Value="Alta"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Ticket.Status.Alta.Background}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Status}" Value="Aberto"/>
                    <Condition Binding="{Binding Priority}" Value="Media"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Ticket.Status.Media.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource Ticket.Status.Media.Foreground}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Status}" Value="Aberto"/>
                    <Condition Binding="{Binding Priority}" Value="Baixa"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Ticket.Status.Baixa.Background}"/>
            </MultiDataTrigger>
            
            <!-- Tickets Em Andamento (usaremos a mesma cor da prioridade) -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Status}" Value="EmAndamento"/>
                    <Condition Binding="{Binding Priority}" Value="Alta"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Ticket.Status.Alta.Background}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Status}" Value="EmAndamento"/>
                    <Condition Binding="{Binding Priority}" Value="Media"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Ticket.Status.Media.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource Ticket.Status.Media.Foreground}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Status}" Value="EmAndamento"/>
                    <Condition Binding="{Binding Priority}" Value="Baixa"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Ticket.Status.Baixa.Background}"/>
            </MultiDataTrigger>

            <!-- Tickets Fechados e Resolvidos -->
            <DataTrigger Binding="{Binding Status}" Value="Fechado">
                <Setter Property="Background" Value="{DynamicResource Ticket.Status.Fechado.Background}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}" Value="Resolvido">
                <Setter Property="Background" Value="{DynamicResource Ticket.Status.Resolvido.Background}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</DataGrid.RowStyle>
<DataGrid.CellStyle>
    <Style TargetType="DataGridCell">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True">
                <Setter Property="Foreground" Value="#3366FF"/>
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="50"/>
                <DataGridTextColumn Header="Título" Binding="{Binding Title}" Width="*"/>
                <DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="120"/>
                <DataGridTextColumn Header="Prioridade" Binding="{Binding Priority}" Width="120"/>
                <DataGridTextColumn Header="SLA (min est.)" Binding="{Binding SlaMinutes}" Width="100"/>
                <DataGridTextColumn Header="SLA Final (min)" Binding="{Binding SLAFinal}" Width="110"/>
                <DataGridTextColumn Header="Última Atualização" Binding="{Binding UpdatedAt, StringFormat='dd/MM/yyyy HH:mm'}" Width="160"/>
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</mah:MetroWindow>