// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using TicketManager.WPF.Data;

#nullable disable

namespace TicketManager.WPF.Migrations
{
    [DbContext(typeof(TicketContext))]
    [Migration("20251013150303_RenameReopeningLogsTable")]
    partial class RenameReopeningLogsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TicketManager.WPF.Models.AuthorizedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IsAdmin")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("IS_ADMIN");

                    b.Property<string>("WindowsUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("WINDOWS_USER_NAME");

                    b.HasKey("Id");

                    b.ToTable("AUTHORIZED_USERS", (string)null);
                });

            modelBuilder.Entity("TicketManager.WPF.Models.ReopeningLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("REASON");

                    b.Property<DateTime>("ReopenedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("REOPENED_AT");

                    b.Property<string>("ReopenedBy")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("REOPENED_BY");

                    b.Property<int>("TicketId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TICKET_ID");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("HIST_REABERTURA", (string)null);
                });

            modelBuilder.Entity("TicketManager.WPF.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("CreatedByHostname")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("CREATED_BY_HOSTNAME");

                    b.Property<string>("CreatedByWindowsUser")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("CREATED_BY_WINDOWS_USER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<int>("Priority")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PRIORITY")
                        .HasComment("0=Baixa, 1=Media, 2=Alta");

                    b.Property<int?>("SLAFinal")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SLAFINAL");

                    b.Property<int>("SlaMinutes")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SLA_MINUTES");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("STATUS")
                        .HasComment("0=Aberto, 1=EmAndamento, 2=Resolvido, 3=Fechado");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TITLE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("TICKETS", (string)null);
                });

            modelBuilder.Entity("TicketManager.WPF.Models.TicketLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("DeletedByHostname")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DELETED_BY_HOSTNAME");

                    b.Property<string>("DeletedByWindowsUser")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DELETED_BY_WINDOWS_USER");

                    b.Property<DateTime>("DeletionTimestamp")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DELETION_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<int>("OriginalTicketId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ORIGINAL_TICKET_ID");

                    b.Property<int>("Priority")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PRIORITY");

                    b.Property<int>("SlaMinutes")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SLA_MINUTES");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("STATUS");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TITLE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("TICKET_LOGS", (string)null);
                });

            modelBuilder.Entity("TicketManager.WPF.Models.ReopeningLog", b =>
                {
                    b.HasOne("TicketManager.WPF.Models.Ticket", "Ticket")
                        .WithMany("ReopeningLogs")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("TicketManager.WPF.Models.Ticket", b =>
                {
                    b.Navigation("ReopeningLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
